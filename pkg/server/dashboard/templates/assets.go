package templates

import (
	"time"

	"github.com/jessevdk/go-assets"
)

var _Assets63ee2efd8d8466106078b867dca773cca0c49385 = "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <!-- import CSS -->\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\n  <style type=\"text/css\">\n    .el-table .warning-row {\n      background: oldlace;\n    }\n    .el-table .success-row {\n      background: #f0f9eb;\n    }\n    #app {\n      margin-top: 5%;\n    }\n  </style>\n</head>\n<body>\n<div id=\"app\">\n  <el-container>\n    <el-header>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"3\"><el-input v-model=\"name\" placeholder=\"Name\"></el-input></el-col>\n        <el-col :span=\"3\"><el-input v-model=\"version\" placeholder=\"Version\"></el-input></el-col>\n        <el-col :span=\"4\"><el-input v-model=\"host\" placeholder=\"Host\"></el-input></el-col>\n        <el-col :span=\"7\"><el-input v-model=\"path\" placeholder=\"Path\"></el-input></el-col>\n        <el-col :span=\"3\"><el-select v-model=\"status\" placeholder=\"Please Select\">\n          <el-option\n                  v-for=\"item in options\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n          </el-option>\n        </el-select>\n        </el-col>\n        <el-col :span=\"4\"><el-button type=\"primary\" icon=\"el-icon-search\" v-on:click=\"search\">搜索</el-button></el-col>\n      </el-row>\n    </el-header>\n    <el-main>\n    <el-table\n            :data=\"tableData\"\n            style=\"width: 100%\"\n            :row-class-name=\"tableRowClassName\">\n      <el-table-column\n              prop=\"id\"\n              label=\"ID\"\n              width=\"180\">\n      </el-table-column>\n      <el-table-column\n              prop=\"name\"\n              label=\"name\"\n              width=\"180\">\n      </el-table-column>\n      <el-table-column\n              prop=\"version\"\n              label=\"Version\">\n      </el-table-column>\n      <el-table-column\n              prop=\"path\"\n              label=\"Path\">\n      </el-table-column>\n      <el-table-column\n              prop=\"host\"\n              label=\"Host\">\n      </el-table-column>\n      <el-table-column\n              prop=\"status\"\n              label=\"Status\">\n      </el-table-column>\n      <el-table-column\n              prop=\"description\"\n              label=\"Description\">\n      </el-table-column>\n      <el-table-column\n              prop=\"initTime\"\n              label=\"InitTime\">\n      </el-table-column>\n    </el-table>\n    <el-main>\n  </el-container>\n</div>\n</body>\n<!-- import Vue before Element -->\n<script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\n<script src=\"https://unpkg.com/vue-router/dist/vue-router.js\"></script>\n<!-- import JavaScript -->\n<script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n<script>\n  const router = new VueRouter({\n    routes: []\n  })\n  var Main = {\n    el: '#app',\n    data: {\n        name: \"\",\n        version: \"\",\n        host: \"\",\n        path: \"\",\n        status: \"\",\n        tableData: [],\n        options: [{\n          value: '',\n          label: 'Please Select'\n        }, {\n          value: 'Inited',\n          label: 'Inited'\n        }, {\n          value: 'Runing',\n          label: 'Runing'\n        }, {\n          value: 'Stoped',\n          label: 'Stoped'\n        }, {\n          value: 'Upgrading',\n          label: 'Upgrading'\n        },{\n          value: 'WaitingUpgrade',\n          label: 'WaitingUpgrade'\n        }],\n    },\n    created: function(){\n      query = this.$route.query\n      if (query.hasOwnProperty(\"name\")) {\n        this.name = query.name\n      }\n      if (query.hasOwnProperty(\"version\")) {\n        this.version = query.version\n      }\n      if (query.hasOwnProperty(\"path\")) {\n        this.path = query.path\n      }\n      if (query.hasOwnProperty(\"host\")) {\n        this.host = query.host\n      }\n      if (query.hasOwnProperty(\"status\")) {\n        this.status = query.status\n      }\n      this.convert(this.$route.fullPath)\n    },\n    methods: {\n      convert: function (params) {\n        axios\n                .get('api/searchtidbclusters' + params)\n                .then(response => {\n                  this.tableData = response.data.data\n                })\n      },\n      tableRowClassName({row, rowIndex}) {\n        if (rowIndex === 1) {\n          return 'warning-row';\n        } else if (rowIndex === 3) {\n          return 'success-row';\n        }\n        return '';\n      },\n      search: function () {\n        params = {}\n        if (this.name != \"\") {\n          params.name = this.name\n        }\n        if (this.version != \"\") {\n          params.version = this.version\n        }\n        if (this.path != \"\") {\n          params.path = this.path\n        }\n        if (this.host != \"\") {\n          params.host = this.host\n        }\n        if (this.status != \"\") {\n          params.status = this.status\n        }\n        this.$router.push({\n          query: params\n        })\n        this.convert(this.$route.fullPath);\n      },\n    },\n    router\n  }\n  var Ctor = new Vue(Main)\n</script>\n</html>"
var _Assetsed8b0b21cd2e2f201192750e67c051b1e773a13c = ""

// Assets returns go-assets FileSystem
var Assets = assets.NewFileSystem(map[string][]string{}, map[string]*assets.File{
	"index.tmpl": &assets.File{
		Path:     "index.tmpl",
		FileMode: 0x1a4,
		Mtime:    time.Unix(1572116511, 1572116511617733083),
		Data:     []byte(_Assets63ee2efd8d8466106078b867dca773cca0c49385),
	}, "assets.go": &assets.File{
		Path:     "assets.go",
		FileMode: 0x1a4,
		Mtime:    time.Unix(1572116511, 1572116511622559522),
		Data:     []byte(_Assetsed8b0b21cd2e2f201192750e67c051b1e773a13c),
	}}, "")
